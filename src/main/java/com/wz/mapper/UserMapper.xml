<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wz.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.wz.pojo.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="gmt_create" jdbcType="TIMESTAMP"
			property="gmtCreate" />
		<result column="gmt_update" jdbcType="TIMESTAMP"
			property="gmtUpdate" />
		<result column="role_id" jdbcType="INTEGER" property="roleId" />

	</resultMap>

	<!-- 查找用户角色名与权限 -->
	<resultMap type="com.wz.pojo.User" id="roleAndpower"
		extends="BaseResultMap">

		<association property="role" javaType="com.wz.pojo.Role">
			<!-- id:关联查询用户的唯一标识 column:指定唯一标识用户信息的列 property:映射到role的那个属性 -->

			<id column="role_id" property="id" />
			<!-- <result column="name" property="name"/> -->
			<result column="power_json" property="powerJson" />
		</association>
	</resultMap>


	<sql id="Base_Column_List">
		id, username, password, status, gmt_create, gmt_update, role_id
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from m_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from m_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.wz.pojo.User">
		insert into m_user (id, username, password,
		status, gmt_create, gmt_update,
		role_id)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP},
		#{roleId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.wz.pojo.User">
		insert into m_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtUpdate != null">
				gmt_update,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtUpdate != null">
				#{gmtUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.wz.pojo.User">
		update m_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
			</if>
			<if test="gmtUpdate != null">
				gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wz.pojo.User">
		update m_user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
		gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
		role_id = #{roleId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateStatus">
		update m_user
		<set>
			<if test="status!=null">
				status = #{status}
			</if>
			<where>
				id = #{id}
			</where>
		</set>
	</update>


	<!-- 通过用户名查找 -->
	<select id="getByName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from m_user where username = #{username}

	</select>

	<!-- 获取用户资料 -->
	<select id="getUserInfo" parameterType="java.lang.Integer"
		resultMap="roleAndpower">
		select u.* , r.name, r.power_json from m_role r, m_user u where u.id = #{id}
		and u.role_id = r.id

	</select>
	<!-- 查找用户(条件) -->
	<select id="userLists" parameterType="com.wz.dto.FindUserDto"
		resultMap="roleAndpower">
		select
		u.* , r.name, r.power_json
		from m_role r, m_user u
		<where>

			<if test="id!=null">
				u.id = #{id}
			</if>

			<if test="status!=null">
				AND u.status = #{status}
			</if>

			<if test="username!=null">
				AND u.username LIKE CONCAT(CONCAT('%', #{username}), '%')
			</if>

			AND u.role_id = r.id
		</where>
		LIMIT #{page.start}, #{page.pageItemCount}
	</select>

	<!-- 更新密码 -->
	<update id="changePassword">
		update m_user set password = #{password} where username = #{username}
	</update>
</mapper>